name: Build Docker Image

on:
  workflow_call:
    inputs:
      RUNS_ON:
        description: 'The type of machine to run on.'
        required: true
        type: string
        default: ubuntu-24.04
      IMAGE_NAME:
        description: 'The name of the Docker image to build.'
        required: true
        type: string
      IMAGE_TAG:
        description: 'The tag to use for the Docker image.'
        required: true
        type: string
      PUSH:
        description: 'Whether to push the Docker image to the registry.'
        required: true
        type: boolean
      BUILD_CONTEXT_PATH:
        description: 'The context path for the Docker build.'
        required: false
        type: string
        default: '.'
      DOCKERFILE_PATH:
        description: 'The path to the Dockerfile.'
        required: true
        type: string
      AWS_ACCOUNT_ID:
        description: 'AWS account ID containing the ECR repository.'
        required: true
        type: string
      AWS_ROLE_ARN:
        description: 'ARN of the role to assume for pushing to ECR.'
        required: true
        type: string
      AWS_REGION:
        description: 'AWS region of the ECR repository.'
        required: true
        type: string
    secrets:
      BUILD_ARGUMENTS:
        description: 'Build arguments to pass to the Docker build.'
        required: false
    outputs:
      IMAGE_URI:
        description: 'The full URI of the built Docker image.'
        value: ${{ jobs.build.outputs.IMAGE_URI }}

jobs:
  build:
    runs-on: ${{ inputs.RUNS_ON }}
    outputs:
      IMAGE_URI: ${{ steps.generate-full-image-name.outputs.IMAGE_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ inputs.AWS_ROLE_ARN }}
          aws-region: ${{ inputs.AWS_REGION }}
          role-session-name: github-actions-ecr

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate full image name
        id: generate-full-image-name
        run: |
          IMAGE_NAME="${{ inputs.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG }}"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT

      - name: Build & Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.BUILD_CONTEXT_PATH }}
          file: ${{ inputs.DOCKERFILE_PATH }}
          push: ${{ inputs.PUSH }}
          tags: |
            ${{ steps.generate-full-image-name.outputs.IMAGE_NAME }}
          build-args: |
            ${{ fromJSON(secrets.BUILD_ARGUMENTS || '{}') }}
